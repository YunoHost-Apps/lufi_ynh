#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..."

ynh_systemd_action --service_name=$app --action="stop" --log_path="$install_dir/log/production.log"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..."


if [ -z "$max_file_size" ]; then
	max_file_size=100 # 100 Mo
	ynh_app_setting_set --app=$app --key=max_file_size --value=$max_file_size
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..."

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir"
fi

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# SETUP LUFI
#=================================================
ynh_script_progression --message="Configuring Lufi..."

ldap="#"
if [ $use_ldap -eq 1 ];
then
	ldap=""
fi

max_size_set=""
if [ $max_file_size -eq 0 ]; then # Comment the limitation line if no limit
	max_size_set="#"
fi

ynh_add_config --template="../conf/lufi.conf.template" --destination="$install_dir/lufi.conf"

chmod 600 $install_dir/lufi.conf
chown $app:$app $install_dir/lufi.conf

#=================================================
# BUILD LUFI
#=================================================
ynh_script_progression --message="Building Lufi..."

pushd $install_dir
	carton install --deployment --without=sqlite --without=mysql --without=htpasswd --without=test
popd

#=================================================
# SETUP CRON
#=================================================
ynh_script_progression --message="Setuping cron..."

ynh_add_config --template="../conf/cron_lufi" --destination="/etc/cron.d/$app"
chmod +x $install_dir/script/lufi

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..."

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Upgrading logrotate configuration..."

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --non-append

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add $app --description="Lufi service" --log="$install_dir/log/production.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

ynh_systemd_action --service_name=$app --action="restart" --log_path="$install_dir/log/production.log" --line_match="Creating process id file"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed"
